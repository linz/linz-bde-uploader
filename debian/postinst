#!/bin/bash

set -e

SCRIPT=${0##*/}
SUCCESS=0
FAILURE=1

clean_up()
{
    [ -f $TMPFILE ] && rm -f $TMPFILE
}

die()
{
    msg=$1
    err_no=$2
    echo "$SCRIPT: $msg" 1>&2
    clean_up
    exit ${err_no:-$FAILURE}
}

# Make sure the database is installed and running.

BDE_PACKAGE=linz-bde-uploader
BDE_SHARE_DIR=/usr/share/$BDE_PACKAGE
BDE_LOG_DIR=/var/log/$BDE_PACKAGE
BDE_ETC_DIR=/etc/$BDE_PACKAGE
BDE_USER=bde
PG_USER=postgres
DB=linz_db
PG_SERVICE=postgresql
PG_INIT=/etc/init.d/$PG_SERVICE
USE_SERVICE=0
HAS_POSTGIS_EXT=
HAS_ADMIN_EXT=
HAS_UNACCENT_EXT=
TMPFILE=`mktemp -t $BDE_PACKAGE.XXXXXX` || { echo "$0: Cannot create temporary file" >&2; exit 1;  }
chmod 0777 $TMPFILE

if [ -x /usr/sbin/service ]; then
    USE_SERVICE=1
fi

if [ ! -x $PG_INIT ]; then
    die "Can not find $PG_INIT init script"
fi

if [ $USE_SERVICE ]; then
  cmd="service $PG_SERVICE status"
else
  cmd="$PG_INIT status"
fi
$cmd
rc=$?
if [ $rc -ne $SUCCESS ]; then
    if [ $USE_SERVICE ]; then
        cmd="service $PG_SERVICE start"
    else
        cmd="$PG_INIT start"
    fi
    $cmd
    rc=$?
    if [ $rc -ne $SUCCESS ]; then
      die "There was a problem starting the $PG_SERVICE service"
    fi
fi

PG_VERSION="$(su -l $PG_USER -c """psql -t -A postgres -c 'SHOW server_version_num'""")"

if [ $PG_VERSION -lt 90100 ]; then
    die "Need to run this install script against PostgreSQL 9.1 or higher"
fi
    
# create bde database if it does not exists
if ! su -l $PG_USER -c "psql -t -A --list | grep $DB"; then
    rc=$(sudo su -l $PG_USER -c "createdb -O $PG_USER -E UTF8 -T template0 -l C $DB &> $TMPFILE; echo \$?")
    if [ $rc -ne $SUCCESS ] ; then
        die "Could not create database" $rc
    fi
fi

EXTENSIONS="
	plperlu
	plperl
	unaccent
	postgis
	dbpatch
	table_version
"
for EXT in $EXTENSIONS
do
	rc=$(sudo su -l $PG_USER -c "psql -d $DB -c 'CREATE EXTENSION $EXT' &> $TMPFILE; echo \$?")
	HAS_EXT="$(su -l $PG_USER -c """psql -t -A -c 'SELECT extname FROM pg_extension WHERE extname = \$\$$EXT\$\$' $PG_USER""")"
	if [ -n "$HAS_EXT" ]; then
		if [ $rc -ne $SUCCESS ] ; then
			die "Could install $EXT extension" $rc
		fi
	fi
done

#ensure patches.sql is the last file in this array
SQL_FILES="
    $BDE_SHARE_DIR/sql/bde_roles.sql
    $BDE_SHARE_DIR/sql/bde_schema.sql
    $BDE_SHARE_DIR/sql/bde_functions.sql
    $BDE_SHARE_DIR/sql/bde_control_tables.sql
    $BDE_SHARE_DIR/sql/bde_control_functions.sql
    $BDE_SHARE_DIR/sql/lds_layer_tables.sql
    $BDE_SHARE_DIR/sql/lds_layer_functions.sql
    $BDE_SHARE_DIR/sql/bde_ext_schema.sql
    $BDE_SHARE_DIR/sql/bde_ext_functions.sql
    $BDE_SHARE_DIR/sql/create_table_polygon_grid.sql
    $BDE_SHARE_DIR/sql/patches.sql
"

for SQL_FILE in $SQL_FILES
do
    rc=$(sudo su -l $PG_USER -c "psql -v ON_ERROR_STOP=TRUE -d $DB -f $SQL_FILE &> $TMPFILE; echo \$?")
    if [ $rc -ne $SUCCESS ] ; then
        cat $TMPFILE
        die "Couldn't install SQL file: $SQL_FILE" $rc
    fi
done

# if old lds_bde user exists rename it to bde
OLD_LDS_USER=lds_bde
if getent group $OLD_LDS_USER >/dev/null; then
	killall -u $OLD_LDS_USER
	usermod -l $BDE_USER $OLD_LDS_USER
	groupmod -n $BDE_USER $OLD_LDS_USER
	usermod -m -d /home/$BDE_USER $BDE_USER
	usermod -c “BDE Maintainer” $BDE_USER
fi

# creating BDE user if it doesn't exist
if ! getent passwd $BDE_USER >/dev/null; then
        adduser \
          --system \
          --ingroup $BDE_USER \
          --gecos "BDE Maintainer" \
        $BDE_USER  >/dev/null
fi

if ! su -l $PG_USER -c "psql -t -c \"select 1 from pg_roles where rolname = '$BDE_USER' AND rolcanlogin = TRUE\"" | grep 1; then
    # Create $BDE_USER user without password
    su -l $PG_USER -c "psql -c 'CREATE ROLE $BDE_USER LOGIN NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE'"
    su -l $PG_USER -c "psql -c 'ALTER ROLE $BDE_USER SET search_path=bde, bde_control, lds, table_version, public'"
    su -l $PG_USER -c "psql -c 'GRANT bde_dba TO $BDE_USER'";
fi;


# now create log directory if it does not exist.
if [ ! -d $BDE_LOG_DIR ]; then
    mkdir -p $BDE_LOG_DIR
fi
chown -R $BDE_USER:adm $BDE_LOG_DIR;
chmod 0755 $BDE_LOG_DIR;

# allow bde group to edit files in etc directory
chmod 0774 $BDE_LOG_DIR;
chown -R root:bde $BDE_ETC_DIR

clean_up

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
