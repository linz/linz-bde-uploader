name: test

on:
  push:
    branches:
      - master
      - packagecloud
      - 'release-*'
    tags-ignore:
      - 'debian/*'
  pull_request:
    branches:
      - '*'

jobs:

  test:

    name: PostgreSQL ${{ matrix.pg }}, PostGIS ${{ matrix.pgis }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            pg: [ '9.6', '10', '11' ]
            pgis: [ '2.4', '2.5' ]
            perl: [ '5.24', '5.26' ]
            os: [ ubuntu-18.04 ]
            exclude:
              # excludes PostGIS 2.4 on PostgreSQL 11
              - pg: 11
                pgis: 2.4
    env:
      # Set PATH as postgresql-server-dev-all pretends version is 11
      PATH: /usr/lib/postgresql/${{ matrix.pg }}/bin:/bin:/usr/bin:/usr/local/bin
      APT: "apt-get -o Dpkg::Progress=0 -o Dpkg::Use-Pty=0"
      PCLOUD: https://packagecloud.io/linz
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo ${APT} -qq purge \
            libpq* \
            *php* \
            postgresql*
        sudo rm -rf /var/lib/postgresql
        sudo ${APT} -qq install curl ca-certificates gnupg
        distro=`lsb_release -cs`
        # Enable fetching packages from apt.postgresql repository
        curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ ${distro}-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
        # Enable fetching packages from packagecloud LINZ test repository
        for repo in test prod; do \
            curl -Ls ${PCLOUD}/${repo}/gpgkey \ | sudo apt-key add -; \
            echo "deb ${PCLOUD}/${repo}/ubuntu ${distro} main" | \
                sudo tee /etc/apt/sources.list.d/linz-${repo}.list; \
        done
        # Update apt cache
        sudo ${APT} -qq update
        # Install dependencies
        sudo ${APT} -qq install --no-install-recommends \
            cpanminus \
            debhelper \
            fakeroot \
            postgresql-${{ matrix.pg }} \
            postgresql-client-${{ matrix.pg }} \
            postgresql-contrib-${{ matrix.pg }} \
            postgresql-server-dev-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }}-pgtap \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }} \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }}-scripts \
            postgresql-${{ matrix.pg }}-dbpatch \
            postgresql-${{ matrix.pg }}-tableversion \
            dbpatch \
            tableversion \
            libtest-cmd-perl \
            libtest-exception-perl \
            libtap-parser-sourcehandler-pgtap-perl \
            linz-bde-copy \
            liblinz-utils-perl \
            liblinz-bde-perl \
            linz-bde-schema
        # TODO: Remove DBD::Pg version specifier once https://github.com/bucardo/dbdpg/issues/79 is released
        sudo cpanm \
            DBI \
            DBD::Pg@3.14.2 \
            Date::Calc \
            File::Which \
            Log::Log4perl \
            Module::Build \
            Test::Cmd \
            Test::Exception \
            Text::Diff
    - name: Save PostgreSQL package install logs if failed
      uses: actions/upload-artifact@v2
      with:
        name: cpanm-logs
        path: /home/runner/.cpanm/work/*/*.log
      if: failure()
    - name: Setup PostgreSQL user
      run: |
        sudo -u postgres createuser -s "$USER"
        sudo -u postgres createuser -s root
    - name: Build
      run: |
        # Build
        ./configure
        make
    - name: Test build
      run: |
        # Pre-install tests
        make check
    - name: Install
      run: |
        sudo -E make install
    - name: Test upgrades
      run: |
        make check-upgrades
    - name: Test distribution
      run: |
        make dist
        make distcheck
    - name: Test debian packaging
      run: |
        make deb

  package:
    needs: test
    name: Package for Debian
    runs-on: ubuntu-18.04
    strategy:
        matrix:
            distro: [ 'bionic' ]
    steps:
    - uses: actions/checkout@v1

    - name: Determine packagecloud publication target
      run: |
        # TODO: it would be nice to turn this into a single-liner in
        #       github-action syntax
        echo "GitHub ref: ${{ github.ref }}"
        echo "GitHub event_name: ${{ github.event_name }}"
        PACKAGECLOUD_REPOSITORY=
        if test "${{ github.event_name }}" = 'push'; then
          if expr "${{ github.ref }}" : "refs/tags/" > /dev/null; then
            PACKAGECLOUD_REPOSITORY=test
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          elif test "${{ github.ref }}" = 'refs/heads/packagecloud' \
                 -o "${{ github.ref }}" = 'refs/heads/master'
          then
            PACKAGECLOUD_REPOSITORY=dev
          fi
        fi
        echo "PACKAGECLOUD_REPOSITORY=$PACKAGECLOUD_REPOSITORY" | tee -a $GITHUB_ENV

    - uses: linz/linz-software-repository@v4
      with:
        packagecloud_token: ${{ secrets.LINZCI_PACKAGECLOUD_TOKEN }}
        packagecloud_repository: ${{ env.PACKAGECLOUD_REPOSITORY }}
